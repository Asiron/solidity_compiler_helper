#!/usr/bin/env ruby

require 'json'

def library_code
  'function createContract(abiDefinition) {  return web3.eth.contract(abiDefinition);}function deployContract(account, gas, contract, code, input) {  if (typeof(input)===\'undefined\') input = null;  var instance = contract.new(input,{from:account, data: code, gas: gas}, function (e, contract) {    if(!e) {      if(!contract.address) {        console.log("Contract transaction send: TransactionHash: " + contract.transactionHash + " waiting to be mined...");      } else {        console.log("Contract mined! Address: " + contract.address);        console.log(contract);      }    } else {      console.log(e)    }  });  return instance;}
'
end


def compile_solidity(code)
  json_string= `curl -s -X POST --data '{"jsonrpc":"2.0","method":"eth_compileSolidity","params":["#{code}"],"id":1}' http://127.0.0.1:8100`
  json_object = JSON.parse(json_string)
  compiled_object = json_object['result']
  compiled_object
end

def deploy_contract(code)
end


def javascript_file_name(file_name)
  file_name.split('.')[0] + '_compiled.js'
end

def get_contract_to_deploy(compiled_object)
  return compiled_object.keys[0] if compiled_object.keys.count == 1
  puts "Which contract do you want to deploy?"
  choice = 0
  while choice <= 0 || choice >= compiled_object.keys.count
    compiled_object.keys.each.with_index do |key, i|
      puts "#{(i+1)}. "+key
    end
    choice = $stdin.gets.to_i
  end
  return compiled_object.keys[choice - 1]
end

def get_input
  puts "Enter Input: "
  input = $stdin.gets
  input.strip.chomp == "" ? "null" : input
end

def get_gas
  gas = 0
  while gas == 0
    puts "Enter Gas: "
    gas = $stdin.gets.to_i
  end
  gas
end

file_name = ARGV[0]
code = File.read(file_name).gsub("\n",'')

compiled_object = compile_solidity(code)
javascript_file_name = javascript_file_name(file_name)

current_contract = get_contract_to_deploy(compiled_object)

compiled_variable_name = "#{current_contract}Compiled"
contract_variable_name = "#{current_contract}Contract"
contract_instance_variable_name = "#{current_contract}"

gas = get_gas
input = get_input
puts input


File.open(javascript_file_name, 'w') do |f|
  f.write("#{library_code};\nvar #{compiled_variable_name} = #{compiled_object.to_json};")
  f.write("#{contract_variable_name} = createContract(#{compiled_variable_name}.#{current_contract}.info.abiDefinition);")
  f.write("#{contract_instance_variable_name} = deployContract(eth.coinbase,#{gas},#{contract_variable_name},#{compiled_variable_name}.#{current_contract}.code,#{input});")
  f.write("console.log('Compiled Object : #{compiled_variable_name}');")
  f.write("console.log('Contract : #{contract_variable_name}');")
  f.write("console.log('Contract Instance : #{contract_instance_variable_name}');")
end

puts "loadScript('#{`pwd`}/#{javascript_file_name}')".gsub("\n",'')
